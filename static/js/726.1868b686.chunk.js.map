{"version":3,"file":"static/js/726.1868b686.chunk.js","mappings":"+PACA,GAAgB,WAAa,yBAAyB,MAAQ,oBAAoB,IAAM,mB,wECsDxF,EAhDY,WACV,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAeC,EAAf,KAyBA,OAtBAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAIA,IAAMM,EAAc,mCAAE,2FACdC,EADc,UACAC,EAAAA,GADA,mBACmBR,EADnB,2CAC6DS,EAAAA,IAD7D,kBAGZC,EAAAA,EAAAA,IAAUH,GACfI,MAAK,SAACC,GACLR,EAAUQ,EAASC,KAAKC,KACzB,IANiB,sDAQlBC,QAAQC,IAAR,MARkB,gEAAF,qDAcpBV,GAhBC,CAiBF,GAAE,CAACN,KAIA,4BACE,eAAIiB,UAAWC,EAAAA,MAAf,mBACA,eAAID,UAAWC,EAAAA,WAAf,SACGf,GAAUA,EAAOgB,KAAI,SAACC,GAAD,OACtB,gBAAmBH,UAAWC,EAAAA,WAA9B,WACE,gBAAKG,IAAKD,EAAME,aAAeC,EAAAA,GAAiBH,EAAME,aAAeE,EAAOC,IAAKL,EAAMM,KAAMT,UAAWC,EAAAA,OACxG,4BACA,uBAAIE,EAAMM,QACV,uCAAeN,EAAMO,kBAJdP,EAAMQ,GADO,QAc/B,C,+HCrDM,IAAMpB,EAAW,8BACXC,EAAU,mCACVoB,EAAgB,kCAChBN,EAAiB,iC","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","constants/constants.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorsItem\":\"Cast_actorsItem__B9AN6\",\"title\":\"Cast_title__0cH9s\",\"img\":\"Cast_img__-isbW\"};","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {BASE_URL, API_KEY, BASE_URL_PROFILE} from '../../constants/constants';\nimport css from './Cast.module.css';\nimport image from '../../images/image-not-found.webp';\n\nconst Cast= () => {\n  const { movieId } = useParams();\n  const [actors, setActors]=useState([]);\n\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n \n    const fetchMovieCast=(async ()=>{\n      const fetchQuery=`${BASE_URL}3/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`;\n     try{\n        await axios.get(fetchQuery)\n        .then((response) => {\n          setActors(response.data.cast);\n        })\n      }catch(error) {\n        console.log(error);\n      };\n    \n     \n    })\n    \n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n \n      <div>\n        <h3 className={css.title}>Cast</h3>\n        <ul className={css.actorsList}>\n          {actors && actors.map((actor) => (\n          <li key={actor.id} className={css.actorsItem}>\n            <img src={actor.profile_path ? BASE_URL_PROFILE+actor.profile_path : image} alt={actor.name} className={css.img} />\n            <div>\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n            </div>\n          </li>\n          ))}\n        </ul>\n         \n      </div>\n    \n  );\n};\n\nexport default Cast;","export const BASE_URL = \"https://api.themoviedb.org/\";\nexport const API_KEY = \"567e66254656681ea9a58ed02993db62\";\nexport const BASE_URL_POSTER='https://image.tmdb.org/t/p/w500';\nexport const BASE_URL_PROFILE='https://image.tmdb.org/t/p/w185';"],"names":["movieId","useParams","useState","actors","setActors","useEffect","fetchMovieCast","fetchQuery","BASE_URL","API_KEY","axios","then","response","data","cast","console","log","className","css","map","actor","src","profile_path","BASE_URL_PROFILE","image","alt","name","character","id","BASE_URL_POSTER"],"sourceRoot":""}